apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jupyter-cpu
  annotations:
    konghq.com/strip-path: "true"
    kubernetes.io/ingress.class: nginx
    konghq.com/override: "https-only"
    cert-manager.io/issuer: "letsencrypt-prod-app"
    certmanager.k8s.io/acme-challenge-type: "dns01"
    certmanager.k8s.io/acme-dns01-provider: "digitalocean"
    nginx.ingress.kubernetes.io/auth-url: "https://github-oauth2.app.mesolitica.com/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://github-oauth2.app.mesolitica.com/oauth2/start?rd=$scheme://$host$request_uri"
    nginx.org/client-max-body-size: 1000M
    nginx.ingress.kubernetes.io/proxy-body-size: 1000m
spec:
  tls:
    - hosts:
        - jupyter-cpu.app.mesolitica.com
      secretName: wildcard-cert-app
  rules:
    - host: jupyter-cpu.app.mesolitica.com
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: jupyter-cpu
                port:
                  number: 8888
---
apiVersion: v1
kind: Service
metadata:
  name: jupyter-cpu
  labels:
    app: jupyter-cpu
spec:
  ports:
    - port: 8888
  clusterIP: None
  selector:
    app: jupyter-cpu
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jupyter-cpu
spec:
  selector:
    matchLabels:
      app: jupyter-cpu
  serviceName: "jupyter-cpu"
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: jupyter-cpu
    spec:
      tolerations:
        - key: "kubernetes.azure.com/scalesetpriority"
          operator: "Equal"
          value: "spot"
          effect: "NoSchedule"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "kubernetes.azure.com/scalesetpriority"
                    operator: In
                    values:
                      - "spot"
                  - key: "agentpool"
                    operator: In
                    values:
                      - "cpu"
      terminationGracePeriodSeconds: 10
      containers:
        - name: jupyter-cpu
          image: mesoliticadev/jupyter-gpu-devel:main
          imagePullPolicy: Always
          ports:
            - containerPort: 8888
          volumeMounts:
            - name: storage
              mountPath: /home/ubuntu
          env:
            - name: SHELL
              value: "/bin/bash"
          command: ["/bin/bash", "-c"]
          args:
            [
              "sudo chmod -R 777 /home/ubuntu; jupyter notebook --NotebookApp.token='' --ip=0.0.0.0 --NotebookApp.allow_origin='*'",
            ]

      securityContext:
        fsGroupChangePolicy: "OnRootMismatch"

  volumeClaimTemplates:
    - metadata:
        name: storage
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: default
        resources:
          requests:
            storage: 500Gi
